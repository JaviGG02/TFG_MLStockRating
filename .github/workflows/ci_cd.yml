name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - Code_Formating
      - Code_Testing
  pull_request:
    branches:
      - main
      - Code_Formating
      - Code_Testing

jobs:
  # BACKEND PIPELINE
  backend-dependencies:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: [3.10.14]
    steps:
    - uses: actions/checkout@v3  # Añadir esto para hacer checkout del código
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip

  backend-code-formatting:
    needs: backend-dependencies
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - name: Set executable permissions for scripts
      run: chmod +x ./scripts/format_code_black.sh ./scripts/check_quality_pylint.sh ./scripts/check_quality_flake8.sh
    - name: Install code formatting and quality tools
      run: |
        pip install black
        pip install pylint 
        pip install flake8
    - name: Code formatting with Black
      run: ./scripts/format_code_black.sh
    - name: Code quality checks
      run: |
        ./scripts/check_quality_pylint.sh
        ./scripts/check_quality_flake8.sh

  backend-tests:
    needs: backend-code-formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set executable permissions for scripts
      run: chmod +x ./scripts/run_tests.sh ./scripts/check_quality_radon.sh ./scripts/check_quality_bandit.sh
    - name: Install test dependencies
      run: |
        pip install pytest flask
        pip install -r requirements.txt
    - name: Export API Key to Environment
      run: echo "API_KEY=${{ secrets.API_KEY }}" >> $GITHUB_ENV
    - name: Run tests
      run: |
        ./scripts/run_tests.sh
    - name: Install other test tools
      run: |
        pip install radon bandit
    - name: Run complexity text
      run: |
        ./scripts/check_quality_radon.sh
    - name: Run security test checks
      run: |
        ./scripts/check_quality_bandit.sh

  # FRONTEND PIPELINE
  frontend-dependencies:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.14.0'
    - name: Install frontend dependencies
      run: |
        npm install
        npm install --save-dev prettier
        npm install --save-dev eslint eslint-config-react
        npm install --save-dev stylelint stylelint-config-standard

  frontend-code-formatting:
    needs: frontend-dependencies
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.14.0'
    - name: Set executable permissions for scripts
      run: chmod +x ./scripts/check_format_frontend.sh ./scripts/check_quality_frontend.sh
    - name: Run code formating
      run: ./scripts/check_format_frontend.sh
    - name: Run code quality checks
      run: ./scripts/check_quality_frontend.sh

  frontend-tests:
    needs: frontend-code-formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.14.0'
    - name: Run frontend tests
      run: npm test 